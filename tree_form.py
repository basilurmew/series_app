import sympy as sp# and  operation for list elementsdef is_bool_and(bool_list:list) -> bool:    if False in bool_list:        return False    else:        return True#or operation for list elementsdef is_bool_or(bool_list:list) -> bool:    return True in bool_list# is ExponentialPolynomialFactorial expr?def is_exponential_polynomial_factorial(expr) -> bool:    if len(expr.args) < 2:        if isinstance(expr, (sp.factorial, sp.factorial2, sp.Integer, sp.Symbol)):            return True        else:            return False    if isinstance(expr, (sp.Add, sp.Mul, sp.Pow)):            return is_bool_and([is_exponential_polynomial_factorial(i) for i in expr.args])    else:        return False#is factorial or factorial2 in the expression ?def is_factorial(expr) -> bool:    if len(expr.args) < 2:        if isinstance(expr, (sp.factorial, sp.factorial2)):            return True        else:            return False    if isinstance(expr, (sp.Add, sp.Mul, sp.Pow)):            return is_bool_or([is_factorial(i) for i in expr.args])    else:        return False#is log in the expression?def is_log(expr) -> bool:    if len(expr.args) < 2:        if isinstance(expr, sp.log):            return True        else:            return False    if isinstance(expr, (sp.Add, sp.Mul, sp.Pow)):            return is_bool_or([is_log(i) for i in expr.args])    else:        return False